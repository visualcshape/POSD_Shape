cmake_minimum_required(VERSION 3.3.0)

set(PROJECT_NAME "HW2")
set(LIBRARY_CHOICE "C")
set(CMAKE_AUTOMOC ON)

project(${PROJECT_NAME})

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY  "${CMAKE_CURRENT_SOURCE_DIR}/")
#set(CMAKE_PREFIX_PATH "C:\\Qt\\Qt5.5.0\\5.5\\mingw492_32")
set(QT_INCLUDE_DIR "C:\\Qt\\Qt5.5.0\\5.5\\mingw492_32\\include")
link_directories("cppunitlite")
include_directories(${QT_INCLUDE_DIR})
include_directories("${QT_INCLUDE_DIR}\\ActiveQt")
include_directories("${QT_INCLUDE_DIR}\\QtCLucene")
include_directories("${QT_INCLUDE_DIR}\\QtConcurrent")
include_directories("${QT_INCLUDE_DIR}\\QtCore")
include_directories("${QT_INCLUDE_DIR}\\QtDeclarative")
include_directories("${QT_INCLUDE_DIR}\\QtDesigner")
include_directories("${QT_INCLUDE_DIR}\\QtDesignerComponents")
include_directories("${QT_INCLUDE_DIR}\\QtGui")
include_directories("${QT_INCLUDE_DIR}\\QtHelp")
include_directories("${QT_INCLUDE_DIR}\\QtMultimedia")
include_directories("${QT_INCLUDE_DIR}\\QtMultimediaWidgets")
include_directories("${QT_INCLUDE_DIR}\\QtMultimediaQuick_p")
include_directories("${QT_INCLUDE_DIR}\\QtNetwork")
include_directories("${QT_INCLUDE_DIR}\\QtOpenGL")
include_directories("${QT_INCLUDE_DIR}\\QtOpenGLExtensions")
include_directories("${QT_INCLUDE_DIR}\\QtPlatformSupport")
include_directories("${QT_INCLUDE_DIR}\\QtPrintSupport")
include_directories("${QT_INCLUDE_DIR}\\QtQml")
include_directories("${QT_INCLUDE_DIR}\\QtQucik")
include_directories("${QT_INCLUDE_DIR}\\QtQuickParticles")
include_directories("${QT_INCLUDE_DIR}\\QtQuickTest")
include_directories("${QT_INCLUDE_DIR}\\QtScript")
include_directories("${QT_INCLUDE_DIR}\\QtScriptTools")
include_directories("${QT_INCLUDE_DIR}\\QtSensor")
include_directories("${QT_INCLUDE_DIR}\\QtSerialPort")
include_directories("${QT_INCLUDE_DIR}\\QtSql")
include_directories("${QT_INCLUDE_DIR}\\QtSvg")
include_directories("${QT_INCLUDE_DIR}\\QtTest")
include_directories("${QT_INCLUDE_DIR}\\QtUiTools")
include_directories("${QT_INCLUDE_DIR}\\QtV8")
include_directories("${QT_INCLUDE_DIR}\\QtWebKit")
include_directories("${QT_INCLUDE_DIR}\\QtWebKitWidgets")
include_directories("${QT_INCLUDE_DIR}\\QtWidgets")
include_directories("${QT_INCLUDE_DIR}\\QtXml")
include_directories("${QT_INCLUDE_DIR}\\QtXmlPatterns")
include_directories("${QT_INCLUDE_DIR}\\QtXZlib")
set(SOURCE_FILES mainTest.cpp )
set(SHAPE_SOURCE_FILES BoundingBox.h BoundingBox.cpp Circle.h Circle.cpp CompositeGraphics.h CompositeGraphics.cpp Graphics.h Graphic.cpp Line.h Line.cpp Point.h Point.cpp Rectangle.h Rectangle.cpp shape.h shape.cpp SimpleGraphics.h SimpleGraphic.cpp Square.h Square.cpp)
set(VISITOR_SOURCE_FILES GraphicsVisitor.cpp GraphicsVisitor.h AreaVisitor.cpp AreaVisitor.h DescriptionVisitor.cpp DescriptionVisitor.h DrawVisitor.cpp DrawVisitor.h)
set(FACTORY_SOURCE_FILES GraphicFactory.cpp GraphicFactory.h SimpleGraphicFactory.cpp SimpleGraphicFactory.h CompositeGraphicFactory.cpp CompositeGraphicFactory.h)
set(UNIT_TEST_SOURCE_FILES utHW3.h)
set(UTILITY_SOURCE_FILES Utility.cpp Utility.h)
set(GUI_SOURCE_FILES utGUI.h GUI.cpp GUI.h)
set(COMMANDS_SOURCE_FILES Command.h)
set(MODELS_SOURCE_FILES GraphicsModel.cpp GraphicsModel.h Observer.cpp Observer.h Subject.cpp Subject.h PresentationModel.cpp PresentationModel.h)

add_executable(${PROJECT_NAME} ${SOURCE_FILES} ${SHAPE_SOURCE_FILES} ${VISITOR_SOURCE_FILES} ${FACTORY_SOURCE_FILES} ${UNIT_TEST_SOURCE_FILES} ${UTILITY_SOURCE_FILES} ${GUI_SOURCE_FILES} ${COMMANDS_SOURCE_FILES} ${MODELS_SOURCE_FILES})
find_package(Qt5Core)
find_package(Qt5Gui)
find_package(Qt5Widgets)
target_link_libraries(${PROJECT_NAME} Qt5::Core)
target_link_libraries(${PROJECT_NAME} Qt5::Gui)
target_link_libraries(${PROJECT_NAME} Qt5::Widgets)
if(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
    target_link_libraries(${PROJECT_NAME} CppUnitLiteOSX.a)
else()
    if(LIBRARY_CHOICE STREQUAL "MINGW")
        target_link_libraries(${PROJECT_NAME} CppUnitLiteMinGW.a)
    else()
        target_link_libraries(${PROJECT_NAME} CppUnitLite.a)
    endif()
endif()