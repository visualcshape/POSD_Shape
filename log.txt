1219-2013 use of inheritance, polymorphism, OCP

circle and square
=> commit 975f20a

1. How to store a list of different shape objects in a vector?
A vector canb only store object (or poiter to obejct) 
of the same type. We need to have a type that fits all.
-> convert to void *
2. How to convert void * to Circle * and Square *? How do we know
which type to convert to? Luckily each shape has a name!
-> static_cast<Circle *>(p)
3. write up the printShape function.
=> commit 2971044
Problem: now add a new class called Line.

1. add the class Line.
2. modify printShape function: add if check for line
=> commit 8587bb1

Look back:
1. Much duplicated code
2. The need to modify printShape every time you add a new type

Remove duiplicated code: Inheritance. Should not do anything to the tests.
explain how inheritance works.
1. add class Shape with stuff to be shared. 
2. Derive Circle from Shape:
   modifying ctor, 
   remove duplicated code: _name, name(),
   modify print() (due to _name)
3. ditto Square
4. ditto Line
=> commit
How many line did we save?


   

